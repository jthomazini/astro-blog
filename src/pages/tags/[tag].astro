---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../components/BlogPost.astro';

export async function getStaticPaths() {
	// Fetch all Markdown posts
	const allPosts = await getCollection('posts');

	// Use flatMap to simplify mapping and flattening in case some posts might not have tags defined
	const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

	// Generate paths for each tag with corresponding posts
	return tags.map((tag) => {
		const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
	<p>Posts tagged with {tag}</p>
	<ul>
		{posts.map((post) => <BlogPost url={`/posts/${post.slug}/`} title={post.data.title} />)}
	</ul>
</BaseLayout>
